#!/bin/bash
# Bash arrays https://opensource.com/article/18/5/you-dont-know-bash-intro-bash-arrays
# Bash Integer context https://linuxize.com/post/bash-increment-decrement-variable/ 

# Input file
input="input.txt"

gammeRate=0
epsilonRate=0

linesCount=0
numColumns=0

columns=0

# Read each line from the file into $line
while IFS= read -r line
do
  ((linescount++))

  # Determine the number of columns
  if [ $numColumns -eq 0 ]; then
    numColumns=${#line}

    for (( i=0; i<numColumns; i++ ))
    do
      columns[$i]=0
    done
  fi

  # Sum the colums
  for (( i=0; i<numColumns; i++ ))
  do
    columnValue=${line:$i:1}
    ((columns[i]+=columnValue))
  done

done < "$input"

# Convert to binary in each column
for (( i=0; i<numColumns; i++ ))
do
  sum=${columns[i]}
  threshold=$((linescount/2))
  ((columns[i]=0))
  if [ $sum -gt $threshold ]; then
    ((columns[i]=1))
  fi
  
  # Calculate Gamma
  power=$((numColumns-1-i))
  ((gammaRate+=columns[i]*(2**power)))
done

# Show the binary output
echo "${columns[@]}"

echo "Gamma Rate $gammaRate"

# This is the inverse, so use math(s)
epsilonRate=$((2**12-gammaRate-1))
echo "Epsilon Rate $epsilonRate"

powerConsumption=$((gammaRate*epsilonRate))
echo "Power Consumption $powerConsumption"
